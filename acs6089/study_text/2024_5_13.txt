4-4. 스타크래프트를 만들자2 (const, static)

(생성자 이름) : var1(arg1), var2(arg2) {}
위와 같이 생성자를 사용하게되면 일반적인 사용같이 생성을 하고 그 다음에 대입을 하는게 아니라 생성과 초기화를 동시에 진행
... 생성과 초기화를 동시에 진행해야하는 레퍼런스나 상수를 사용할 때 위와 같은 사용이 필요

전역 변수의 경우 프로젝트 크기가 커질 수록 프로그래머의 실수러 인해 서로 겹쳐서 오류가 날 가능성이 높으므로 반드시 필요한 경우가 아니면 전역 변수 사용은 지양하자
대신 전역 변수 같지만 클래스 하나에만 종속되는 static 변수를 사용하자
static 변수는 함수나 클래스, 객체가 종료될 때 사라지는 것이 아니라 프로그램이 종료될 때 사라진다.
또한 각 객체 별로 따로 존재하지 않고 하나의 static 변수를 사용
따라서 static 함수 또는 변수는 객체에 종속되는 것이 아닌 클래스에 종속되므로 <클래스>::<static 함수> 형식으로 호출

this라는 것은 객체 자신을 가리키는 포인터의 역활
레퍼런스가 아닌 타입을 리턴하는 경우는 값의 복사가 이루어지기 때문에 임시 객체가 생성되는데, 임시 객체의 레퍼런스를 가질 수 없기 때문에 오류 발생

const는 변수들의 값을 바꾸지 않고 읽기 만 하는, 상수 같은 상수 함수
<기존 함수 정의> const;
위와 같이 함수를 정의하면 해당 함수는 상수 맴버 함수로 정의된다.

문제1. 복사 생성은 몇번?
1. main내부 B b(10); 부분에서 생성자 B(int c) : a(c) {}와 A(int c) : x(c)에서 x를 생성함과 동시에 x에 10을 대입 ->
2. A a1 = b.get_A(); 부분에서 b.get_A();가 A temp(a) 부분에서 한 번 생성하고 이렇게 생성된 a를 새로 생성된 A a1에 대입함으로써 총 2번 생성한다.



4-5. 내가 만드는 String 클래스

가급적이면 char 배열로 문자열을 사용하기보단 string 라이브러리를 사용하자


